name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - dev
      - prd
      - main
  push:
    branches:
      - dev
      - prd

jobs:
  verification:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Create aws-info file
        run: |
          mkdir -p src/main/resources/aws
          echo "${{ secrets.RDS_INFO_ILSANG }}" > src/main/resources/aws/rds-info.yml
          echo "${{ secrets.S3_INFO_ILSANG }}" > src/main/resources/aws/s3-info.yml

      - name: Test Code
        run: ./gradlew test

  deploy:
    runs-on: ubuntu-latest
    needs: verification
    if: github.event_name == 'push' && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/prd')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Create aws-info file
        run: |
          mkdir -p src/main/resources/aws
          echo "${{ secrets.RDS_INFO_ILSANG }}" > src/main/resources/aws/rds-info.yml
          echo "${{ secrets.S3_INFO_ILSANG }}" > src/main/resources/aws/s3-info.yml

      - name: Create JAR file
        run: |
          chmod +x gradlew
          ./gradlew clean bootJar
          mkdir -p build/libs
          cp build/libs/*.jar apiProject.jar

      - name: Backup jar on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_ILSANG }}
          username: ${{ secrets.EC2_ILSANG_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY_ILSANG }}
          script: |
            TIMESTAMP=$(date +'%Y%m%d%H%M%S')
            if [ -f bin/apiProject.jar ]; then
              cp -a bin/apiProject.jar backup/apiProject_$TIMESTAMP.jar
              echo "Completed backup of jar to backup/apiProject_$TIMESTAMP.jar"
            else
              echo "No jar file found to backup"
            fi

      - name: Upload JAR to S3
        run: |
          aws s3 cp apiProject.jar s3://${{ secrets.S3_BUCKETNAME }}/jars/apiProject.jar \
            --region ap-northeast-2

      - name: SSH into EC2 and Deploy from S3
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_ILSANG }}
          username: ${{ secrets.EC2_ILSANG_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY_ILSANG }}
          script: |
            # Set timestamp
            TIMESTAMP=$(date +'%Y%m%d%H%M%S')

            # Download jar from S3
            aws s3 cp s3://${{ secrets.S3_BUCKETNAME }}/jars/apiProject.jar bin/apiProject.jar \
              --region ap-northeast-2


  run-dev:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - name: Execute deploy script on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_ILSANG }}
          username: ${{ secrets.EC2_ILSANG_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY_ILSANG }}
          script: |
            if [ -f bin/deploy.sh ]; then
              echo "deploy.sh found, executing script..."
              bin/deploy.sh dev
            else
              echo "deploy.sh not found in bin directory"
              exit 1
            fi

  run-prd:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/prd'
    steps:
      - name: Execute deploy script on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_ILSANG }}
          username: ${{ secrets.EC2_ILSANG_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY_ILSANG }}
          script: |
            if [ -f bin/deploy.sh ]; then
              echo "deploy.sh found, executing script..."
              bin/deploy.sh prd  # 변경: dev -> prd
            else
              echo "deploy.sh not found in bin directory"
              exit 1
            fi