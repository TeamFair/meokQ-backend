name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - dev
      - prd
      - main
  push:
    branches:
      - dev
      - prd

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials & Test SSH Connection
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Configuring AWS credentials..."
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region ap-northeast-2

          echo "Testing EC2 SSH connection..."
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_ILSANG_USERNAME }}@${{ secrets.EC2_HOST_ILSANG }} "echo 'SSH connection successful.'"

      - name: Check S3 Health
        run: |
          echo "Performing S3 health check..."
          if aws s3api head-bucket --bucket ${{ secrets.S3_BUCKETNAME }} --region ap-northeast-2; then
            echo "S3 connection successful."
          else
            echo "Failed to connect to S3."
            exit 1
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Create AWS Info File
        run: |
          mkdir -p src/main/resources/aws
          echo "${{ secrets.RDS_INFO_ILSANG }}" > src/main/resources/aws/rds-info.yml
          echo "${{ secrets.S3_INFO_ILSANG }}" > src/main/resources/aws/s3-info.yml

      - name: Build JAR File
        run: |
          chmod +x gradlew
          ./gradlew clean bootJar
          mkdir -p build/libs
          cp build/libs/*.jar apiProject.jar

      - name: Upload JAR to S3
        run: |
          aws s3 cp apiProject.jar s3://${{ secrets.S3_BUCKETNAME }}/jars/apiProject.jar --region ap-northeast-2

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_ILSANG }}
          username: ${{ secrets.EC2_ILSANG_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY_ILSANG }}
          script: |
            echo "Downloading latest JAR from S3..."
            aws s3 cp s3://${{ secrets.S3_BUCKETNAME }}/jars/apiProject.jar bin/apiProject.jar --region ap-northeast-2
            if [ $? -ne 0 ]; then
              echo "Failed to download JAR from S3."
              exit 1
            fi

  run-dev:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - name: Execute deploy script on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_ILSANG }}
          username: ${{ secrets.EC2_ILSANG_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY_ILSANG }}
          script: |
            if [ -f bin/deploy.sh ]; then
              echo "deploy.sh found, executing script..."
              bin/deploy.sh dev
            else
              echo "deploy.sh not found in bin directory"
              exit 1
            fi

  run-prd:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/prd'
    steps:
      - name: Execute deploy script on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_ILSANG }}
          username: ${{ secrets.EC2_ILSANG_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY_ILSANG }}
          script: |
            if [ -f bin/deploy.sh ]; then
              echo "deploy.sh found, executing script..."
              bin/deploy.sh prd  # 변경: dev -> prd
            else
              echo "deploy.sh not found in bin directory"
              exit 1
            fi